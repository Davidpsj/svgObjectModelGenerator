{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "/style",
    "title": "style",
    "description": "The style object",
    "type": "object",
    "properties": {
    	"name": {
    		"description": "The name of the style specified by the author. (For instance art style as shown in the 'Graphic Styles' panel in Illustrator.)",
    		"type": "string"
		},
    	"blend-mode": {
    		"description": "These are all blend modes that are supported in browsers beside the default `normal`",
    		"enum": [ "normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity" ]
    	},
    	"fill": {
    		"description": "The fill properties of the object",
    		"anyOf": [
    			{ "$ref": "#fillColor" },
    			{ "$ref": "#fillGradient" },
    			{ "$ref": "#fillPattern" }
    		],
    		"type": "object"
    	},
    	"font": {
    		"description": "The font properties of the object",
    		"$ref": "#font"
    	},
    	"isolation": {
    		"description": "If the isolation property is set to `isolate` the object gets isolated",
    		"enum": [ "isolate" ]
    	},
    	"stroke": {
    		"description": "The stroke properties of the object",
    		"anyOf": [
    			{ "$ref": "#strokeColor" },
    			{ "$ref": "#strokeGradient" },
    			{ "$ref": "#strokePattern" }
    		],
    		"type": "object"
    	},
    	"clip-path": {
    		"description": "The unique id of the clipping path in the global `clipPaths` object",
    		"type": "string"
    	},
    	"filter": {
    		"description": "The unique id of the filter in the global `filters` object",
    		"type": "string"
    	},
    	"mask": {
    		"description": "The unique id of the mask in the global `masks` object",
    		"type": "string"
    	},
    	"opacity": {
    		"description": "The opacity of the whole object including filter, stroke and fill",
    		"type": "number",
    		"minimum": 0,
    		"maximum": 1
    	}
	},
    "defintions": {
    	"gradientRefLinear": {
    		"type": "object",
    		"properties": {
    			"ref": {
    				"description": "A unique identifier that references a gradient",
    				"type": "string"
    			},
		        "transform": {
		            "type": "object",
		            "oneOf": [
		                { "$ref": "/transform2d" },
		                { "$ref": "/transform3d" }
		            ]
		        },
		        "gradientSpace": {
		        	"enum": [ "userSpaceOnUse", "objectBoundingBox" ]
		        },
		        "x1": {
		        	"type": "number"
		        },
		        "y1": {
		        	"type": "number"
		        },
		        "x2": {
		        	"type": "number"
		        },
		        "y2": {
		        	"type": "number"
		        }
    		},
    		"required": [ "ref", "x1", "y1", "x2", "y2" ]
		},
    	"gradientRefRadial": {
    		"type": "object",
    		"properties": {
    			"ref": {
    				"description": "A unique identifier that references a gradient",
    				"type": "string"
    			},
		        "transform": {
		            "type": "object",
		            "oneOf": [
		                { "$ref": "/transform2d" },
		                { "$ref": "/transform3d" }
		            ]
		        },
		        "gradientSpace": {
		        	"enum": [ "userSpaceOnUse", "objectBoundingBox" ]
		        },
		        "cx": {
		        	"type": "number"
		        },
		        "cy": {
		        	"type": "number"
		        },
		        "fx": {
		        	"type": "number"
		        },
		        "fy": {
		        	"type": "number"
		        },
		        "r": {
		        	"type": "number"
		        }
    		},
    		"required": [ "ref", "cx", "cy", "r" ]
		},
    	"patternRef": {
    		"type": "object",
    		"properties": {
    			"ref": {
    				"description": "A unique identifier that references a gradient",
    				"type": "string"
    			},
		        "transform": {
		            "type": "object",
		            "oneOf": [
		                { "$ref": "/transform2d" },
		                { "$ref": "/transform3d" }
		            ]
		        }
	        },
		    "required": [ "ref" ]
    	},
    	"fill": {
    		"properties": {
    			"opacity": {
    				"type": "number",
    				"minimum": 0,
    				"maximum": 1
    			}
    		}
		},
    	"fillColor": {
    		"type": "object",
    		"$ref": "#fill",
    		"properties": {
    			"color": {
    				"type": "object",
    				"$ref": "/color"
    			},
    			"type": {
    				"enum": [ "color", "none" ]
    			}
    		},
    		"required": [ "color", "type" ]
		},
    	"fillGradient": {
    		"type": "object",
    		"$ref": "#fill",
    		"properties": {
    			"gradient": {
    				"type": "object",
    				"$ref": "#gradientRef"
    			},
    			"type": {
    				"enum": [ "gradient", "none" ]
    			}
    		},
    		"required": [ "color", "type" ]
		},
    	"fillPattern": {
    		"type": "object",
    		"$ref": "#fill",
    		"properties": {
    			"gradient": {
    				"type": "object",
    				"$ref": "#patternRef"
    			},
    			"type": {
    				"enum": [ "pattern", "none" ]
    			}
    		},
    		"required": [ "pattern", "type" ]
		},
    	"stroke": {
    		"properties": {
    			"align": {
    				"enum": [ "center", "inside", "outside" ]
    			},
    			"cap": {
    				"enum": [ "round", "butt", "square" ]
    			},
    			"dash": {
    				"type": "array",
    				"items": "number"
    			},
    			"join": {
    				"enum": [ "bevel", "round", "miter" ]
    			},
    			"miter-limit": {
    				"type": "integer"
				},
    			"opacity": {
    				"type": "number",
    				"minimum": 0,
    				"maximum": 1
    			},
    			"width": {
    				"description": "The width of the stroke",
    				"type": "number",
    				"minimum": 0
    			}
    		}
    	},
    	"strokeColor": {
    		"type": "object",
    		"$ref": "#stroke",
    		"properties": {
    			"color": {
    				"type": "object",
    				"$ref": "/color"
    			},
    			"type": {
    				"enum": [ "color", "none" ]
    			}
    		},
    		"required": [ "color", "type" ]
		},
    	"strokeGradient": {
    		"type": "object",
    		"$ref": "#stroke",
    		"properties": {
    			"gradient": {
    				"type": "object",
    				"$ref": "#gradientRef"
    			},
    			"type": {
    				"enum": [ "gradient", "none" ]
    			}
    		},
    		"required": [ "color", "type" ]
		},
    	"strokePattern": {
    		"type": "object",
    		"$ref": "#stroke",
    		"properties": {
    			"gradient": {
    				"type": "object",
    				"$ref": "#patternRef"
    			},
    			"type": {
    				"enum": [ "pattern", "none" ]
    			}
    		},
    		"required": [ "pattern", "type" ]
		},
    	"font": {
    		"type": "object"
    	}
    }
}